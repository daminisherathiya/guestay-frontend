{
  "root": true,
  "settings": {
    "tailwindcss": {
      "config": "./src/theme/tailwind.config.ts"
    },
    "react": {
      "version": "detect"
    }
  },
  "env": {
    "browser": true,
    "es2020": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:prettier/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:tailwindcss/recommended",
    "next",
    "next/core-web-vitals",
    "next/typescript"
  ],
  "ignorePatterns": ["dist"],
  "parser": "@typescript-eslint/parser",
  "plugins": ["import", "@typescript-eslint", "react"],
  "rules": {
    "react/jsx-sort-props": [
      "error",
      {
        "ignoreCase": true,
        "callbacksLast": true,
        "shorthandFirst": true,
        "noSortAlphabetically": false,
        "reservedFirst": true
      }
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": {
          "memberTypes": "never",
          "order": "alphabetically"
        }
      }
    ],
    "@typescript-eslint/no-empty-object-type": "off",
    "sort-keys": [
      "error",
      "asc",
      {
        "caseSensitive": false,
        "natural": true
      }
    ],
    "tailwindcss/no-custom-classname": ["error", {
      "whitelist": ["c-keyboard-arrow-icon"]
    }],
    "react/react-in-jsx-scope": "off",
    "comma-dangle": ["error", "always-multiline"],
    "indent": ["error", 2, { "SwitchCase": 1 }],
    "no-var": "error",
    "sort-imports": [
      "error",
      {
        "ignoreCase": false,
        "ignoreDeclarationSort": true,
        "ignoreMemberSort": false
      }
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "next/**",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/**",
            "group": "internal"
          }
        ],
        "pathGroupsExcludedImportTypes": ["builtin"],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ]
  }
}
